컴퓨터 과학에서 
객체 또는 오브젝트(object)는 
1. 저장공간에서 할당되어 값을 가진다  &&
2. 식별자(ID)에 의해 참조되는 공간
 변수, 자료구조(배열), 함수 또는 메소드가 될 수 있다.

==>  변수를 이용해 객체에 접근

메모리가 할당되기 전까지 객체는 존재하지 않는다.

객체는 클래스의 인스턴스이다.

클래스 객체는 자료와 그 자료를 다루는 명령의 조합(메소드)을 포함하여
객체가 메시지를 받고 자료를 처리하며 메시지를 다른 객체로 보낼 수 있도록 한다.
실세계의 유추로 설명하자면, 
약 어떤 사람이 집에서 살기를 원할 때
그 집의 청사진(집의 사진)이나 축소 모형 따위는 전혀 필요가 없다.
필요한 것은 설계에 맞는 실제 집이다
이 유추에서 청사진은 클래스를 나타내고 실제 집은 객체를 나타낸다.

class, and how to declare fields, methods, and constructors
 
 real-world objects  : 아바타
 
 상속 은닉화 추상화 다형성 ======>>>  만족해야지 객체지향프로그래밍이다.
 OOP
 객체지향프로그래밍은 상추다.
 
 메소드의 선언구조
 
public String test(String a){
접근제한+리턴타입 + ID + (파라미터) + {에어리어}  >>>>>>>메소드의 구조
	a
} --> a는 파라미터
 m.test(a); --> a는 아규먼트
 
 리턴타입
 
결과가 없으면 void
결과가 있으면 String,int,...,Member

리턴이 없는 경우와 있는경우
리턴타입이 void 인 경우와 아닌경우.
누가 판단합니까?  == 문법x 개발자가 판단. 
 